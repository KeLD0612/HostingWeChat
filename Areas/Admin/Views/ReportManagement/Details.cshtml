@model webchat.Models.Report
@{
    ViewData["Title"] = "Chi tiết báo cáo #" + Model.ReportId;
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2><i class="fas fa-flag text-danger"></i> Chi tiết báo cáo #@Model.ReportId</h2>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Index", "ReportManagement", new { area = "Admin" })">
                                    Quản lý báo cáo
                                </a>
                            </li>
                            <li class="breadcrumb-item active">Chi tiết #@Model.ReportId</li>
                        </ol>
                    </nav>
                </div>
                <div>
                    <a href="@Url.Action("Index", "ReportManagement", new { area = "Admin" })" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Quay lại
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <!-- Report Information -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Thông tin báo cáo</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <table class="table table-borderless">
                                <tr>
                                    <td class="fw-bold">ID báo cáo:</td>
                                    <td>#@Model.ReportId</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Người báo cáo:</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="me-2">
                                                <i class="fas fa-user-circle fs-4 text-primary"></i>
                                            </div>
                                            <div>
                                                <div>@(Model.Reporter?.FullName ?? "N/A")</div>
                                                <small class="text-muted">@Model.Reporter?.Email</small>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Người bị báo cáo:</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="me-2">
                                                <i class="fas fa-user-circle fs-4 text-warning"></i>
                                            </div>
                                            <div>
                                                <div>@(Model.ReportedUser?.FullName ?? "N/A")</div>
                                                <small class="text-muted">@Model.ReportedUser?.Email</small>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Lý do:</td>
                                    <td><span class="badge bg-danger">@Model.Reason</span></td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-6">
                            <table class="table table-borderless">
                                <tr>
                                    <td class="fw-bold">Loại báo cáo:</td>
                                    <td>@Model.ReportType</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Trạng thái:</td>
                                    <td>
                                        @switch (Model.Status.ToLower())
                                        {
                                            case "pending":
                                                <span class="badge bg-warning">Chờ xử lý</span>
                                                break;
                                            case "resolved":
                                                <span class="badge bg-success">Đã giải quyết</span>
                                                break;
                                            case "rejected":
                                                <span class="badge bg-danger">Đã từ chối</span>
                                                break;
                                        }
                                    </td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Ngày tạo:</td>
                                    <td>@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Mô tả:</td>
                                    <td>@(string.IsNullOrEmpty(Model.Description) ? "Không có mô tả" : Model.Description)</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Reported Message -->
            @if (Model.ReportedMessage != null)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Tin nhắn bị báo cáo</h5>
                    </div>
                    <div class="card-body">
                        <div class="message-item p-3 bg-light rounded">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <div>
                                    <strong>@(Model.ReportedMessage.Sender?.FullName ?? "Unknown")</strong>
                                    <small class="text-muted ms-2">@Model.ReportedMessage.SentAt.ToString("dd/MM/yyyy HH:mm")</small>
                                </div>
                                <span class="badge bg-danger">Reported</span>
                            </div>
                            <div class="message-content">
                                @if (Model.ReportedMessage.MessageType == "text")
                                {
                                    <p class="mb-0">@Model.ReportedMessage.Content</p>
                                }
                                else if (Model.ReportedMessage.MessageType == "image")
                                {
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-image me-2"></i>
                                        <span>Image: @Model.ReportedMessage.FileName</span>
                                    </div>
                                    @if (!string.IsNullOrEmpty(Model.ReportedMessage.FileUrl))
                                    {
                                        <img src="@Model.ReportedMessage.FileUrl" alt="Reported image" class="img-thumbnail mt-2" style="max-width: 200px;">
                                    }
                                }
                                else
                                {
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-file me-2"></i>
                                        <span>@Model.ReportedMessage.MessageType: @Model.ReportedMessage.FileName</span>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Context Messages -->
                @if (ViewBag.ContextMessages != null && ((List<webchat.Models.Message>)ViewBag.ContextMessages).Any())
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Ngữ cảnh cuộc trò chuyện</h5>
                            <small class="text-muted">Các tin nhắn xung quanh thời điểm báo cáo</small>
                        </div>
                        <div class="card-body">
                            <div class="conversation-context" style="max-height: 400px; overflow-y: auto;">
                                @foreach (var msg in (List<webchat.Models.Message>)ViewBag.ContextMessages)
                                {
                                    <div class="message-item mb-2 p-2 rounded @(msg.Id == Model.ReportedMessageId ? "bg-danger-subtle border-danger" : "bg-light")">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <strong>@(msg.Sender?.FullName ?? "Unknown")</strong>
                                                <small class="text-muted ms-2">@msg.SentAt.ToString("HH:mm")</small>
                                            </div>
                                            @if (msg.Id == Model.ReportedMessageId)
                                            {
                                                <span class="badge bg-danger">Reported</span>
                                            }
                                        </div>
                                        <div class="message-content mt-1">
                                            @if (msg.MessageType == "text")
                                            {
                                                <p class="mb-0">@msg.Content</p>
                                            }
                                            else
                                            {
                                                <em class="text-muted">[@msg.MessageType] @msg.FileName</em>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

        <div class="col-lg-4">
            <!-- Admin Actions -->
            @if (Model.Status == "Pending")
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Xử lý báo cáo</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button class="btn btn-warning" onclick="processReport(@Model.ReportId, 'warning')">
                                <i class="fas fa-exclamation-triangle"></i> Cảnh báo
                            </button>
                            <button class="btn btn-danger" onclick="processReport(@Model.ReportId, 'ban_user_temporary')">
                                <i class="fas fa-clock"></i> Ban tạm thời
                            </button>
                            <button class="btn btn-dark" onclick="processReport(@Model.ReportId, 'ban_user_permanent')">
                                <i class="fas fa-ban"></i> Ban vĩnh viễn
                            </button>
                            @if (Model.ReportedMessageId.HasValue)
                            {
                                <button class="btn btn-outline-danger" onclick="processReport(@Model.ReportId, 'delete_message')">
                                    <i class="fas fa-trash"></i> Xóa tin nhắn
                                </button>
                            }
                            <button class="btn btn-secondary" onclick="processReport(@Model.ReportId, 'reject')">
                                <i class="fas fa-times"></i> Từ chối
                            </button>
                        </div>
                    </div>
                </div>
            }

            <!-- Response Templates -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Template phản hồi</h5>
                </div>
                <div class="card-body">
                    <select id="responseTemplate" class="form-select mb-2" onchange="loadTemplate()">
                        <option value="">Chọn template...</option>
                        @if (ViewBag.ResponseTemplates != null)
                        {
                            @foreach (var template in (List<object>)ViewBag.ResponseTemplates)
                            {
                                <option value="@((dynamic)template).Id" data-content="@((dynamic)template).Content">@((dynamic)template).Title</option>
                            }
                        }
                    </select>
                    <textarea id="adminNoteTextarea" class="form-control" rows="4" placeholder="Nhập ghi chú admin..."></textarea>
                </div>
            </div>

            <!-- Report History -->
            @if (ViewBag.UserReportHistory != null && ((List<webchat.Models.Report>)ViewBag.UserReportHistory).Any())
            {
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Lịch sử báo cáo khác</h5>
                        <small class="text-muted">Các báo cáo khác về người dùng này</small>
                    </div>
                    <div class="card-body">
                        @foreach (var historyReport in (List<webchat.Models.Report>)ViewBag.UserReportHistory)
                        {
                            <div class="border-bottom pb-2 mb-2">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <span class="badge bg-info">@historyReport.Reason</span>
                                        <div class="mt-1">
                                            <small class="text-muted">
                                                Báo cáo bởi: @(historyReport.Reporter?.FullName ?? "N/A")
                                            </small>
                                        </div>
                                        <div>
                                            <small class="text-muted">@historyReport.CreatedAt.ToString("dd/MM/yyyy")</small>
                                        </div>
                                    </div>
                                    <div>
                                        @switch (historyReport.Status.ToLower())
                                        {
                                            case "pending":
                                                <span class="badge bg-warning">Chờ xử lý</span>
                                                break;
                                            case "resolved":
                                                <span class="badge bg-success">Đã giải quyết</span>
                                                break;
                                            case "rejected":
                                                <span class="badge bg-danger">Đã từ chối</span>
                                                break;
                                        }
                                    </div>
                                </div>
                                @if (!string.IsNullOrEmpty(historyReport.Description))
                                {
                                    <div class="mt-2">
                                        <small class="text-muted">@historyReport.Description</small>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Process Report Modal -->
<div class="modal fade" id="processModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xử lý báo cáo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="processForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="reportId" value="@Model.ReportId">
                    <input type="hidden" id="actionType">
                    
                    <div class="mb-3">
                        <label for="adminNote" class="form-label">Ghi chú admin *</label>
                        <textarea id="adminNote" class="form-control" rows="3" required placeholder="Nhập ghi chú về quyết định của bạn..."></textarea>
                    </div>
                    
                    <div id="banDurationGroup" class="mb-3" style="display: none;">
                        <label for="banDuration" class="form-label">Thời gian ban (ngày)</label>
                        <input type="number" id="banDuration" class="form-control" value="7" min="1" max="365">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="submitProcessForm()">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
// Process report function
function processReport(reportId, action) {
    document.getElementById('actionType').value = action;
    
    // Show/hide ban duration based on action
    const banDurationGroup = document.getElementById('banDurationGroup');
    if (action === 'ban_user_temporary') {
        banDurationGroup.style.display = 'block';
    } else {
        banDurationGroup.style.display = 'none';
    }
    
    // Set default admin note from textarea if available
    const adminNoteTextarea = document.getElementById('adminNoteTextarea');
    const adminNoteModal = document.getElementById('adminNote');
    if (adminNoteTextarea.value.trim()) {
        adminNoteModal.value = adminNoteTextarea.value;
    }
    
    // Show modal
    new bootstrap.Modal(document.getElementById('processModal')).show();
}

// Submit process form
function submitProcessForm() {
    const formData = new FormData(document.getElementById('processForm'));
    
    const data = {
        id: parseInt(document.getElementById('reportId').value),
        action: document.getElementById('actionType').value,
        adminNote: document.getElementById('adminNote').value.trim(),
        banDuration: document.getElementById('actionType').value === 'ban_user_temporary' ? 
            parseInt(formData.get('banDuration')) : null
    };
    
    // Validation
    if (!data.adminNote.trim()) {
        showAlert('warning', 'Vui lòng nhập ghi chú admin');
        return;
    }
    
    // Hiển thị loading
    const submitBtn = document.querySelector('#processModal .btn-primary');
    const originalText = submitBtn.textContent;
    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang xử lý...';
    submitBtn.disabled = true;
    
    fetch('@Url.Action("ProcessReport", "ReportManagement", new { area = "Admin" })', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            showAlert('success', result.message);
            
            // Cập nhật UI
            setTimeout(() => {
                location.reload();
            }, 1500);
        } else {
            showAlert('danger', result.message || 'Có lỗi xảy ra');
        }
    })
    .catch(error => {
        console.error('Error processing report:', error);
        showAlert('danger', 'Lỗi kết nối: ' + error.message);
    })
    .finally(() => {
        submitBtn.textContent = originalText;
        submitBtn.disabled = false;
        bootstrap.Modal.getInstance(document.getElementById('processModal')).hide();
    });
}

function loadTemplate() {
    const select = document.getElementById('responseTemplate');
    const textarea = document.getElementById('adminNoteTextarea');
    const selectedOption = select.options[select.selectedIndex];
    
    if (selectedOption.dataset.content) {
        textarea.value = selectedOption.dataset.content;
    }
}

function showAlert(type, message) {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
    alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
    alertDiv.innerHTML = `
        <i class="fas fa-${type === 'success' ? 'check' : type === 'warning' ? 'exclamation-triangle' : 'times'}"></i>
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    document.body.appendChild(alertDiv);
    
    setTimeout(() => {
        if (alertDiv.parentNode) {
            alertDiv.remove();
        }
    }, 5000);
}
</script>
}