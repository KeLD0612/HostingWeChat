@model AdminDashboardViewModel
@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row">
        <div class="col-12">
            <h1 class="h3 mb-4">🎯 Admin Dashboard</h1>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="small text-white-50">Total Users</div>
                            <div class="h4">@Model.TotalUsers</div>
                            <small>+@Model.NewUsersToday hôm nay</small>
                        </div>
                        <div class="fa fa-users fa-2x"></div>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" asp-controller="UserManagement" asp-action="Index">View Details</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="small text-white-50">Messages</div>
                            <div class="h4">@Model.TotalMessages</div>
                            <small>+@Model.MessagesToday hôm nay</small>
                        </div>
                        <div class="fa fa-comments fa-2x"></div>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" asp-controller="MessageManagement" asp-action="Index">View Details</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="small text-white-50">Active Users</div>
                            <div class="h4">@Model.ActiveUsers</div>
                            @{
                                var percentage = Model.TotalUsers > 0 ? (double)Model.ActiveUsers / Model.TotalUsers * 100 : 0;
                            }
                            <small>@percentage.ToString("F1")% tổng</small>
                        </div>
                        <div class="fa fa-user-check fa-2x"></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card bg-danger text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="small text-white-50">Pending Reports</div>
                            <div class="h4">@Model.PendingReports</div>
                            <small>Cần xử lý</small>
                        </div>
                        <div class="fa fa-exclamation-triangle fa-2x"></div>
                    </div>
                </div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" asp-controller="ReportManagement" asp-action="Index" asp-route-status="pending">View Details</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row mb-4">
        <div class="col-xl-6">
            <div class="card">
                <div class="card-header">
                    <h5>📊 Hoạt động 7 ngày qua</h5>
                </div>
                <div class="card-body">
                    <canvas id="dailyStatsChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
        <div class="col-xl-6">
            <div class="card">
                <div class="card-header">
                    <h5>📈 Tăng trưởng người dùng</h5>
                </div>
                <div class="card-body">
                    <canvas id="userGrowthChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Real-time Stats -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5>⚡ Thống kê thời gian thực</h5>
                    <small class="text-muted">Cập nhật lần cuối: <span id="lastUpdate">--:--:--</span></small>
                </div>
                <div class="card-body">
                    <div class="row" id="realTimeStats">
                        <!-- Real-time stats sẽ được load bằng JavaScript -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5>🚀 Quick Actions</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <a asp-controller="UserManagement" asp-action="Index" class="btn btn-primary btn-lg w-100">
                                <i class="fa fa-users"></i> Manage Users
                            </a>
                        </div>
                        <div class="col-md-3 mb-3">
                            <a asp-controller="MessageManagement" asp-action="Index" class="btn btn-success btn-lg w-100">
                                <i class="fa fa-comments"></i> Manage Messages
                            </a>
                        </div>
                        <div class="col-md-3 mb-3">
                            <a asp-controller="ReportManagement" asp-action="Index" asp-route-status="pending" class="btn btn-warning btn-lg w-100">
                                <i class="fa fa-flag"></i> Pending Reports
                            </a>
                        </div>
                        <div class="col-md-3 mb-3">
                            <button class="btn btn-info btn-lg w-100" onclick="exportData()">
                                <i class="fa fa-download"></i> Export Data
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Kiểm tra Model có tồn tại không
        @if (Model?.DailyStats != null)
        {
                <text>
                // Daily Stats Chart
                const dailyStatsData = @Html.Raw(Json.Serialize(Model.DailyStats));
                const dailyCtx = document.getElementById('dailyStatsChart').getContext('2d');
                const dailyChart = new Chart(dailyCtx, {
                    type: 'line',
                    data: {
                        labels: dailyStatsData.map(d => new Date(d.date).toLocaleDateString()),
                        datasets: [{
                            label: 'New Users',
                            data: dailyStatsData.map(d => d.newUsers),
                            borderColor: 'rgb(75, 192, 192)',
                            tension: 0.1
                        }, {
                            label: 'Messages',
                            data: dailyStatsData.map(d => d.messages),
                            borderColor: 'rgb(255, 99, 132)',
                            tension: 0.1
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
                </text>
        }

        @if (Model?.UserGrowthStats != null)
        {
                <text>
                // User Growth Chart
                const growthData = @Html.Raw(Json.Serialize(Model.UserGrowthStats));
                const growthCtx = document.getElementById('userGrowthChart').getContext('2d');
                const growthChart = new Chart(growthCtx, {
                    type: 'bar',
                    data: {
                        labels: growthData.map(d => d.month),
                        datasets: [{
                            label: 'Total Users',
                            data: growthData.map(d => d.userCount),
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }, {
                            label: 'Active Users',
                            data: growthData.map(d => d.activeUserCount),
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
                </text>
        }

        // Real-time stats update
        function updateRealTimeStats() {
            $.get('/Admin/Dashboard/GetRealTimeStats')
                .done(function(data) {
                    $('#realTimeStats').html(`
                        <div class="col-md-3">
                            <div class="text-center">
                                <h4>${data.totalUsers}</h4>
                                <small>Total Users</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h4>${data.totalMessages}</h4>
                                <small>Total Messages</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h4>${data.activeUsers}</h4>
                                <small>Active Users</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h4>${data.pendingReports}</h4>
                                <small>Pending Reports</small>
                            </div>
                        </div>
                    `);
                    $('#lastUpdate').text(data.lastUpdate);
                })
                .fail(function() {
                    console.log('Không thể tải thống kê real-time');
                });
        }

        // Update every 30 seconds
        setInterval(updateRealTimeStats, 30000);
        updateRealTimeStats(); // Initial load

        function exportData() {
            alert('Export functionality sẽ được implement sau');
        }
    </script>
}
